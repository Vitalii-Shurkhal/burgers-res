{"version":3,"sources":["sample-restaurants.js","components/Landing.js","components/Header.js","components/Shipment.js","components/Order.js","components/AddBurgerForm.js","components/EditBurgerForm.js","components/MenuAdmin.js","sample-burgers.js","components/Burger.js","base.js","components/auth/Login.js","components/auth/SignIn.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["restaurants","title","url","id","city","Landing","props","useState","display","setDisplay","setTitle","setUrl","className","onClick","map","restaurant","getTitle","key","history","push","Header","Shipment","total","this","shipping","shippingNeon","React","Component","Order","renderOrder","burger","burgers","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","CSSTransition","TransitionGroup","component","name","price","deleteFromOrder","orderIds","Object","keys","reduce","prevTotal","AddBurgerForm","nameRef","createRef","priceRef","statusRef","descRef","imageRef","createBurger","event","preventDefault","current","value","parseFloat","desc","image","addBurger","currentTarget","reset","onSubmit","ref","type","placeholder","autoComplete","EditBurgerForm","handleChange","console","log","updatedBurger","updateBurger","index","onChange","deleteBurger","MenuAdmin","state","photo","user","authHandler","authData","a","email","photoURL","setState","firebase","auth","onAuthStateChanged","avatar","src","alt","handleLogOut","loadSampleBurgers","sampleBurgers","burger1","burger2","burger3","burger4","burger5","burger6","burger7","burger8","burger9","Burger","details","addToOrder","disabled","firebaseApp","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Login","authenticate","SignIn","authProvider","signInWithPopup","then","children","App","Date","now","signOut","window","location","reload","params","match","localStorageRef","localStorage","getItem","restaurantId","JSON","parse","syncState","context","setItem","stringify","removeBinding","NotFound","Router","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.9c100baa.chunk.js","sourcesContent":["\nconst restaurants = [\n  {\n    title: 'Big Burger Krakow',\n    url: 'big-burger-krakow',\n    id: 1,\n    city: 'Krakow'\n  },\n\n  {\n    title: 'Big Burger Warszawa',\n    url: 'big-burger-warszawa',\n    id: 2,\n    city: 'Warszawa'\n  },\n  {\n    title: 'Big Burger Lublin',\n    url: 'big-burger-lublin',\n    id: 3,\n    city: 'Lublin'\n  }\n];\n\nexport default restaurants;\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport restaurants from '../sample-restaurants'\n\n\nconst Landing = props => {\n\n\n    const [display, setDisplay] = useState(false);\n    const [title, setTitle] = useState('');\n    const [url, setUrl] = useState('');\n\n    const displayList = () => {\n        setDisplay(!display)\n    };\n\n    const getTitle = (restaurant) => {\n        const {title , url } = restaurant\n        setTitle(title)\n        setUrl(url)\n        setDisplay(false)\n\n    };\n\n    const goToShop = () => {\n        props.history.push(`/restaurant/${url}`) \n    };\n\n    return (\n        <div className = 'restaurant_select'>\n            <div className = 'restaurant_select_top'>\n                <div onClick = {displayList} className = 'restaurant_select_top-header font-effect-outline' >{title ? title : 'Choise Restaurant'}</div>\n                <div className = 'arrow_picker'>\n                    <div className = 'arrow_picker-up'></div>\n                    <div className = 'arrow_picker-down'></div>\n                </div>\n            </div>\n\n            {display ? (<div className = 'restaurant_select_bottom'>\n                <ul>\n                    {restaurants.map(restaurant => (\n                        <li onClick = {() => getTitle(restaurant)} key = {restaurant.id}>{restaurant.title}</li>\n                    ))}\n                </ul>\n            </div>) : null}\n\n            {title && !display ? \n            (<button onClick = {goToShop}>Go to the Shop</button>) \n            : null} \n        </div>\n    )\n}\n\nLanding.propTypes = {\n    history: PropTypes.object\n}\n\n\nexport default Landing","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = (props) => {\n\n    return (\n\n    <header className = 'top'>\n        <div className = 'wrap'>\n            <div className = 'header-content'>\n                <div className = 'header-rating'>\n                    <div className = 'header-rating_tag'>Rating</div>\n                    <div className = 'header-rating_icon'>★★★★★</div>\n                </div>\n\n                <div className = 'header-divider'></div>\n                <h1 className = 'font-effect-fire-animation'>{props.title}</h1>\n                <h3>\n                    <span>\n                        Fast delivery hot\n                        <span className = 'sub-header'> #burgers</span>\n                    </span>\n                </h3>\n            </div>\n        </div>\n    </header>\n\n\n)};\n\nHeader.propTypes =  {\n\n    title: PropTypes.string.isRequired\n}\n\nexport default Header;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Shipment extends React.Component{\n\n    static propTypes = {\n        total: PropTypes.number\n    }\n    render(){\n\n        const {total} = this.props;\n        const shipping = total > 0 && total < 500 ? 350 : 99; \n        const shippingNeon = \n            shipping === 99 ? (\n                <span className = 'font-effect-neon total_wrap-cheap'>{shipping}</span>\n            ) : (\n                <span>{shipping}</span>\n            )\n\n        return (\n            <div className = 'total'>\n                    <div className = 'total-wrap'>\n                        <div>\n                            <div>Delivery: {total > 0 ? shippingNeon : null}</div>\n                            <div className = 'total_wrap-free'>\n                                {total < 500 ? `Order more ${500 - total} to get delivery for 99` : null}\n                            </div>\n                        </div>\n                        <div className = 'total_wrap-final'>\n                            Total Cost : {total}\n                        </div>\n                    </div>\n                </div>\n        )\n    }\n\n}\n\nexport default Shipment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Shipment from './Shipment'\nimport {TransitionGroup, CSSTransition} from 'react-transition-group'\n\nclass Order extends React.Component{\n\n  static propTypes = {\n    burgers : PropTypes.object,\n    order: PropTypes.object,\n    deleteFromOrder: PropTypes.func\n  }\n\n    renderOrder = (key)=>{\n        const burger = this.props.burgers[key]\n        const count = this.props.order[key]\n        const isAvailable = burger && burger.status === 'available'\n        const transitionOptions = {\n            classNames: 'order',\n            key,\n            timeout: { enter: 500, exit: 500 }\n        };\n\n        if(!burger) return null\n        if (!isAvailable){\n            return (\n                <CSSTransition {...transitionOptions}>\n            <li className = 'unavailable'  key = {key}>\n                Sorry, {burger? burger.name : 'burger'} is unavailable\n            </li>\n            </CSSTransition>\n            )\n\n        }\n\n        return (\n            <CSSTransition {...transitionOptions}>\n              <li key={key}>\n                <span>\n                  <TransitionGroup component='span' className='count'>\n                    <CSSTransition\n                      classNames='count'\n                      key={count}\n                      timeout={{ enter: 500, exit: 500 }}\n                    >\n                      <span>{count}</span>\n                    </CSSTransition>\n                  </TransitionGroup>\n                  x {burger.name}\n                  <span> {count * burger.price} </span>\n                  <button\n                    onClick={() => this.props.deleteFromOrder(key)}\n                    className='cancellItem'\n                  >\n                    &times;\n                  </button>\n                </span>\n              </li>\n            </CSSTransition>\n          );\n        };\n\n    render(){\n\n        const orderIds = Object.keys(this.props.order);\n        const total = orderIds.reduce((prevTotal, key) => {\n            const burger = this.props.burgers[key]\n            const count = this.props.order[key]\n            const isAvailable = burger && burger.status === 'available'\n            \n            if (isAvailable){\n               return prevTotal + burger.price * count\n            } else {\n                return prevTotal\n            }\n\n        },0)\n        return(\n            \n            <div className = 'order-wrap'>\n                <h2>Your Order</h2>\n                <TransitionGroup component = 'ul' className = 'order'>\n                    {orderIds.map(this.renderOrder)}\n                </TransitionGroup>\n\n                {total > 0 ? (\n                    <Shipment total = {total}/>\n                ) : (\n                    <div className = 'nothingSelected'>\n                        <p>Choose a burger :)</p>\n                    </div>\n                )}\n\n            </div>\n\n        )\n    }\n}\n\nexport default Order;","import React from 'react';\nimport PropTypes from 'prop-types'\n\nclass AddBurgerForm extends React.Component {\n\n    static propTypes = {\n        addBurger: PropTypes.func\n    }\n\n    nameRef = React.createRef()\n    priceRef = React.createRef()\n    statusRef = React.createRef()\n    descRef = React.createRef()\n    imageRef = React.createRef()\n\n\n    createBurger = (event) => {\n        event.preventDefault()\n        \n        const burger = {\n            name: this.nameRef.current.value,\n            price: parseFloat(this.priceRef.current.value || 0),\n            status: this.statusRef.current.value,\n            desc: this.descRef.current.value,\n            image: this.imageRef.current.value\n        };\n\n        this.props.addBurger(burger)\n        event.currentTarget.reset()\n    }\n\n\n    render(){\n        return(\n            \n            <form className = 'burger-edit' onSubmit = {this.createBurger}>\n                <input ref = {this.nameRef} name = 'name ' type = 'text' placeholder = 'Name' autoComplete = 'off'/>\n                <input ref = {this.priceRef} name = 'price' type = 'text' placeholder = 'Price' autoComplete = 'off'/>\n                <select ref = {this.statusRef} name = 'status' type = 'text' className = 'status'>\n                    <option value = 'available'>Available</option>\n                    <option value = 'unavailable'>Remove from Menu</option>\n                </select>\n                <textarea ref = {this.descRef} name = 'desc' placeholder = 'Desc'/>\n                <input ref = {this.imageRef} name = 'image' type = 'text' placeholder = 'Image' autoComplete = 'off'/>\n\n                <button type = 'submit'>Add to the Menu</button>\n            </form>\n        )\n\n    }\n}\n\nexport default AddBurgerForm;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass EditBurgerForm extends React.Component{\n\n  static propTypes = {\n    burger : PropTypes.shape({\n      name : PropTypes.string, \n      image: PropTypes.string, \n      price: PropTypes.number, \n      desc: PropTypes.string, \n      status: PropTypes.string\n    }),\n\n    index: PropTypes.string,\n    addBurger: PropTypes.func,\n    deleteBurger: PropTypes.func\n\n  }\n\n    handleChange = event => {\n        console.log(event.currentTarget.value)\n\n        const updatedBurger = {\n            ...this.props.burger,\n            [event.currentTarget.name]: \n              event.currentTarget.name === 'price' \n              ? parseFloat(event.currentTarget.value) || 0 \n              : event.currentTarget.value\n            \n            \n        }\n\n        this.props.updateBurger(this.props.index, updatedBurger)\n    }\n    render(){\n        return (\n            <div className = 'burger-edit'>\n                <input\n          onChange={this.handleChange}\n          name='name'\n          type='text'\n          value={this.props.burger.name}\n        />\n        <input\n          onChange={this.handleChange}\n          name='price'\n          type='text'\n          value={this.props.burger.price}\n        />\n        <select\n          onChange={this.handleChange}\n          name='status'\n          className='status'\n          value={this.props.burger.status}\n        >\n          <option value='available'>Available!</option>\n          <option value='unavailable'>Unavailable!</option>\n        </select>\n        <textarea\n          onChange={this.handleChange}\n          name='desc'\n          value={this.props.burger.desc}\n        />\n        <input\n          onChange={this.handleChange}\n          name='image'\n          type='text'\n          value={this.props.burger.image}\n        />\n        <button onClick = {()=> this.props.deleteBurger(this.props.index)} >Delete from Menu</button>\n            </div>\n        )\n    }\n\n}\n\nexport default EditBurgerForm; ","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AddBurgerForm from './AddBurgerForm'\nimport EditBurgerForm from './EditBurgerForm';\nimport firebase from 'firebase/app';\n\nclass MenuAdmin extends React.Component{\n\n    state = {\n        photo : '',\n        user: ''\n    }\n\n    componentDidMount(){\n        firebase.auth().onAuthStateChanged(user => {\n            if (user){\n                this.authHandler({user})\n            }\n        })\n    }\n\n    authHandler = async authData => {\n        const {email, photoURL} = authData.user\n        this.setState({user: email, photo: photoURL})\n    }\n\n    static propTypes = {\n        burgers : PropTypes.object,\n        deleteBurger: PropTypes.func,\n        updateBurger: PropTypes.func,\n        addBurger: PropTypes.func,\n        loadSampleBurgers: PropTypes.func\n    }\n    render(){\n\n        const {user, photo} = this.state\n        const avatar = photo ? photo : '/images/avatar.png'\n\n        return(\n            <div className = 'menu-admin'>\n               {user ? ( <div className = 'login-header'>\n                    <div className = 'avatar'>\n                        <img src = {avatar} alt = {user} />\n                    </div>\n                    <button className = 'buttonLogout'\n                        onClick = {this.props.handleLogOut}\n                    >Log Out</button>\n                </div>) : null\n                }\n                <h2>Panel Control</h2>\n                {Object.keys(this.props.burgers).map(key =>{\n                    return(\n                        <EditBurgerForm key = {key} \n                        index = {key}\n                        burger = {this.props.burgers[key]}\n                        updateBurger = {this.props.updateBurger}\n                        deleteBurger = {this.props.deleteBurger}\n                        />\n                    )\n                })}\n                <AddBurgerForm addBurger = {this.props.addBurger}/>\n                <button onClick = {this.props.loadSampleBurgers}>Upload burgers</button>\n                \n            </div>\n            \n\n        )\n\n    }\n}\n\nexport default MenuAdmin; ","\nconst sampleBurgers = {\n  burger1: {\n    name: 'Cheeseburger',\n    image: '/images/cheese.jpg',\n    desc:\n      'Classic 100% beef steak burger with pickled cucumbers and fresh wheat bun.',\n    price: 110,\n    status: 'available'\n  },\n\n  burger2: {\n    name: 'Chickenburger',\n    image: '/images/chicken.jpg',\n    desc:\n      'Chicken burger with melted cheese, BBQ sauce and lettuce.',\n    price: 140,\n    status: 'available'\n  },\n\n  burger3: {\n    name: 'Double Hamburger',\n    image: '/images/double.jpg',\n    desc:\n      'Double Hamburger with 100% Beef Steak and Melted Cheddar Cheese and Spicy Sauce.',\n    price: 200,\n    status: 'unavailable'\n  },\n\n  burger4: {\n    name: 'Fishburger',\n    image: '/images/fish.jpg',\n    desc:\n      'Top quality fish fillet with lettuce, pickled cucumbers and light mayonnaise.',\n    price: 150,\n    status: 'available'\n  },\n\n  burger5: {\n    name: 'French fries',\n    image: '/images/fries.jpg',\n    desc:\n      'Crispy Golden Hot Potato Super Fries, made from selected organic root vegetables!',\n    price: 85,\n    status: 'available'\n  },\n\n  burger6: {\n    name: 'King Burger',\n    image: '/images/ham.jpg',\n    desc:\n      'Burger made from 100% selected beef, with fried bacon slices and fresh melted cheese, seasoned with ketchup and mayonnaise.',\n    price: 450,\n    status: 'available'\n  },\n\n  burger7: {\n    name: 'Mega Burger',\n    image: '/images/mega.jpg',\n    desc:\n      'Our largest burger ever, made with the freshest steak, melted Cheddar cheese and pickles',\n    price: 500,\n    status: 'available'\n  },\n\n  burger8: {\n    name: 'Burger in Pete',\n    image: '/images/pita.jpg',\n    desc:\n      'Four 100% beef patties topped with melted Cheddar cheese with fresh lettuce in a fresh wheat tortilla',\n    price: 380,\n    status: 'available'\n  },\n\n  burger9: {\n    name: 'Village fies',\n    image: '/images/bakedFries.jpg',\n    desc:\n      'A serving of fresh potato slices baked outdoors under peaceful embers',\n    price: 90,\n    status: 'available'\n  }\n};\n\nexport default sampleBurgers;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nclass Burger extends React.Component{\n\n    static propTypes = {\n        details : PropTypes.shape({\n            name : PropTypes.string, \n            image: PropTypes.string, \n            price: PropTypes.number, \n            desc: PropTypes.string, \n            status: PropTypes.string\n            }),\n\n            index: PropTypes.string,\n            addToOrder: PropTypes.func\n    }\n\n    render(){\n\n        const {name, image, price, desc, status} = this.props.details;\n        const isAvailable = status === 'available'\n\n        const handleClick = (props) => {\n            this.props.addToOrder(this.props.index)\n        }\n\n        return (\n            <li className = 'menu-burger'>\n                <div className = 'image-container'>\n                    < img src = {image}/>\n                </div>\n\n                <div className = 'burger-details'>\n                    <h3 className = 'burger-name'>\n                        {name}\n                    <span className = 'price'>{price}</span>\n                    </h3>\n                    <p>{desc}</p>\n                    <button \n                    onClick = {handleClick}\n                    disabled = {!isAvailable} className = 'buttonOrder'>{isAvailable ? 'Order' : 'Unavailable'}</button>\n                </div>\n            </li>\n        )\n    }\n\n}\n\nexport default Burger; \n","import Rebase  from 're-base';\nimport firebase from 'firebase/app';\nimport  'firebase/database';\nimport 'firebase/auth'\n\nconst firebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyBGXupEQ6StAZj8XQptk79wd37jV6vFylg\",\n    authDomain: \"burgers-shop-a0097.firebaseapp.com\",\n    databaseURL: \"https://burgers-shop-a0097-default-rtdb.europe-west1.firebasedatabase.app\"\n})\n\nconst base = Rebase.createClass(firebaseApp.database()); \n\nexport {firebaseApp}\nexport default base;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Login = props =>{\n    return(\n        <div className = 'login-container'>\n            <nav className = 'login'>\n                <h2>Authorization</h2>\n                <center><p>Enter the login and password of your GitHub account</p></center>\n                <button className = 'github'\n                    onClick = {()=> props.authenticate()}\n                >Sign In</button>\n            </nav>\n        </div>\n    )\n}\n\nLogin.propTypes = {\n    authenticate : PropTypes.func.isRequired\n}\n\nexport default Login;","import React from 'react';\nimport Login from './Login';\nimport firebase from 'firebase/app';\nimport {firebaseApp} from '../../base';\n\nclass SignIn extends React.Component{\n\n    state = {\n        user: ''\n    }\n\n    componentDidMount(){\n        firebase.auth().onAuthStateChanged(user => {\n            if (user){\n                this.authHandler({user})\n            }\n        })\n    }\n\n    authHandler = async authData => {\n        const {email} = authData.user\n        this.setState({user: email})\n    }\n\n    authenticate = () =>{\n        const authProvider = new firebase.auth['GithubAuthProvider']();\n        firebaseApp\n            .auth()\n            .signInWithPopup(authProvider)\n            .then(this.authHandler)\n\n    }\n\n    render(){\n        return !this.state.user ? <Login authenticate = {this.authenticate}/> :this.props.children\n    }\n\n\n}\n\nexport default SignIn;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header  from './Header';\nimport Order from './Order';\nimport MenuAdmin from './MenuAdmin';\nimport sampleBurgers from '../sample-burgers';\nimport Burger from './Burger';\nimport base from '../base';\nimport firebase from 'firebase/app';\nimport SignIn from './auth/SignIn'\n\n\nclass App extends React.Component{\n    \n\n    static propTypes = {\n        match: PropTypes.object\n    }\n\n    state = {\n        burgers: {},\n        order: {}\n    }\n\n    componentDidMount() {\n        const { params } = this.props.match;\n        const localStorageRef = localStorage.getItem(params.restaurantId)\n\n        if(localStorageRef){\n            this.setState({order: JSON.parse(localStorageRef)})\n        }\n\n        this.ref = base.syncState(`${params.restaurantId}/burgers`, {\n          context: this,\n          state: 'burgers'\n        });\n      }\n\n      componentDidUpdate(){\n        const { params } = this.props.match;\n          localStorage.setItem(params.restaurantId, JSON.stringify(this.state.order))\n      }\n\n      componentWillUnmount(){\n          base.removeBinding(this.ref)\n      }\n    \n\n    addBurger = (burger) => {\n        // Make state copy \n        const burgers = {...this.state.burgers}\n\n        // add new burger to burgers\n        burgers[`Burger${Date.now()}`] = burger;\n\n        // record new burger to the state\n        this.setState({burgers})\n    }\n\n    updateBurger = (key, updatedBurger) =>{\n         // Make state copy \n         const burgers = {...this.state.burgers}\n         burgers[key] = updatedBurger\n         this.setState({burgers})\n    }\n\n    deleteBurger = key =>{\n         // Make state copy \n         const burgers = {...this.state.burgers}\n\n         // delete burger\n         burgers[key] = null\n \n         // record new burger to the state\n         this.setState({burgers})\n\n    }\n\n\n    loadSampleBurgers = () => {\n        this.setState({burgers : sampleBurgers})\n    }\n\n    addToOrder = (key) => {\n        // Make state copy \n        const order = {...this.state.order}\n        // add new burger to order\n        order[key] = order[key] + 1 || 1\n        // record new order to the state\n        this.setState({order: order})\n    }\n\n    deleteFromOrder = (key)=>{\n          // Make state copy \n          const order = {...this.state.order}\n          // delete burger from order\n          delete order[key]\n          // record new order to the state\n          this.setState({order: order})\n    }\n\n    handleLogOut = async () => {\n        await firebase.auth().signOut();\n        window.location.reload()\n    }\n\n\n    render(){\n\n        return (\n            <SignIn>\n            <div className = 'burger-paradise'>\n                <div className = 'menu'>\n                    <Header title = 'Big Tasty Burger' />\n                    <ul className = 'burgers'>\n                        {Object.keys(this.state.burgers).map(key => {\n                            return <Burger \n                            addToOrder = {this.addToOrder}\n                            key = {key} \n                            index = {key}\n                            details = {this.state.burgers[key]}\n                            />\n                        })}\n                    </ul>\n                </div>\n                    <Order \n                    burgers = {this.state.burgers} \n                    order = {this.state.order}\n                    deleteFromOrder = {this.deleteFromOrder}\n                    />\n                    \n                    <MenuAdmin \n                    addBurger = {this.addBurger}\n                    loadSampleBurgers = {this.loadSampleBurgers}\n                    burgers = {this.state.burgers}\n                    updateBurger = {this.updateBurger}\n                    deleteBurger = {this.deleteBurger}\n                    handleLogOut = {this.handleLogOut}\n                    />\n            </div>\n            </SignIn>\n        );\n\n\n    }\n}\n\n\nexport default App","import React from 'react'\n\nconst NotFound = () => {\n    return (\n        <div>\n            <h2>The Page is Not Found</h2>\n        </div>\n    )\n}\n\nexport default NotFound; ","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Landing from './Landing';\nimport App from './App';\nimport NotFound from './NotFound';\n\nconst Router = ()=> {\n    return(\n        <BrowserRouter>\n            <Switch>\n                <Route exact path = '/' component = {Landing} />\n                <Route path = '/restaurant/:restaurantId' component = {App} />\n                <Route component = {NotFound} />\n            </Switch>\n        \n        </BrowserRouter>\n\n    )\n}\n\nexport default Router","import React from 'react';\nimport { render } from 'react-dom';\nimport Router from './components/Router'\nimport './css/style.css'\n\n\n\nrender(< Router/>, document.querySelector('#root'))\n"],"sourceRoot":""}